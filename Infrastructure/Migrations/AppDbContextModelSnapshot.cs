// <auto-generated />
using Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Infrastructure.Entities.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConsumerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Consumer_ID");

                    b.Property<byte>("FoodRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("Food_Rating");

                    b.Property<byte>("OverallRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("Overall_Rating");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int")
                        .HasColumnName("Restaurant_ID");

                    b.Property<byte>("ServiceRating")
                        .HasColumnType("tinyint")
                        .HasColumnName("Service_Rating");

                    b.HasKey("Id")
                        .HasName("PK__ratings__3214EC077D0525B0");

                    b.HasIndex("RestaurantId");

                    b.ToTable("ratings", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entities.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .HasColumnType("int")
                        .HasColumnName("Restaurant_ID");

                    b.Property<string>("AlcoholService")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Alcohol_Service");

                    b.Property<string>("Area")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Franchise")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Parking")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Price")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SmokingAllowed")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Smoking_Allowed");

                    b.Property<string>("State")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Zip_Code");

                    b.HasKey("RestaurantId");

                    b.ToTable("restaurants", (string)null);
                });

            modelBuilder.Entity("Infrastructure.Entities.Rating", b =>
                {
                    b.HasOne("Infrastructure.Entities.Restaurant", "Restaurant")
                        .WithMany("Ratings")
                        .HasForeignKey("RestaurantId")
                        .IsRequired()
                        .HasConstraintName("FK_ratings_restaurants");

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("Infrastructure.Entities.Restaurant", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
